@inject HttpClient httpClient
@inject VideoJS videoJS
@inject NavigationManager navigationManager

<div>
    <h3>Selected group: @GroupDTO?.Id</h3>
    <CameraSelectorComponent CameraChanged="camera => activeCamera = camera"/>

    <div style="height: 400px;" id="camera"></div>
</div>


@code{
    [Parameter]
    public GroupDTO GroupDTO { get; set; }
    private List<MessagesDTO> messagesDTOs;
    private string activeCamera;
    protected override async Task OnParametersSetAsync()
    {
        await GetMessagesLearningNotes();
    }

    public async Task GetMessagesLearningNotes()
    {
        messagesDTOs = await httpClient.GetFromJsonAsync<List<MessagesDTO>>($"/api/group/MessagesForGroup/{GroupDTO?.Id}");
    }

    private async ValueTask OnLeaveRoom()
    {
        await videoJS.LeaveRoomAsync();
        await videoJS.StartVideoAsync(activeCamera, "#camera");
    }

    private async ValueTask<bool> TryJoinRoom(string roomName)
    {
        if (roomName is null || roomName is { Length: 0 })
        {
            return false;
        }

        var jwt = await httpClient.GetFromJsonAsync<TwilioJWTDTO>("api/twilio/token");
        if (jwt?.Token is null)
        {
            return false;
        }

        var joined = await videoJS.CreateOrJoinRoomAsync(roomName, jwt.Token);
        if (joined)
        {

        }

        return joined;
    }
}
